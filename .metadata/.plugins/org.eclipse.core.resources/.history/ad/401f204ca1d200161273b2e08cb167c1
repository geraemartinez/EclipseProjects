package ctc.traccar.web.rest.controllers;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ctc.traccar.api.vos.DeviceVo;
import ctc.traccar.api.vos.EventVo;
import ctc.traccar.api.vos.GeofenceVo;
import ctc.traccar.business.helpers.JsonParserHelper;
import ctc.traccar.business.implementations.GeofenceService;


@RestController
@RequestMapping("/api/Geofence")
public class GeofenceController {

	private static Logger logger = Logger.getLogger(GeofenceController.class);
	
	@Autowired 
	GeofenceService service;
	
	public ResponseEntity<?> getAllGeofences(){
		HttpHeaders responseHeaders = new HttpHeaders();
		responseHeaders.add("Content-Type", "application/json; charset=utf-8");
		
		try {

			List<GeofenceVo> vo =  service.getAllGeofences();
			return new ResponseEntity<>(JsonParserHelper.toJson(vo),responseHeaders,HttpStatus.OK);
			
		}catch(Exception e){
			String error = "[ERROR] Uncaught Exception - Internal server error at getAllGeofences: " + e.getMessage();
			String JsonError = "{ \"error\": \"" + error +"\"";
			logger.error(error);
			return new ResponseEntity<>(JsonError,HttpStatus.INTERNAL_SERVER_ERROR);			
		}
	}
	public GeofenceVo getGeofenceById(GeofenceVo id){}
	public List<DeviceVo> getDevicesGeofence(GeofenceVo id{}
}
