package ctc.traccar.data.entities;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@SuppressWarnings("serial")
@Entity
@Table(name="users")
public class User implements Serializable {
	
	@Id
	@Column(name=" id")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer id;
	
	@Column(name="name")
	private String name;
	
	@Column(name="email", unique=true)
	private String email;
	
	@Column(name="hashedpassword")
	private String hashedpassword;
	
	@Column(name="salt")
	private String salt;
	
	@Column(name="readonly")
	private boolean readonly;
	
	@Column(name="admin")
	private boolean admin;
	
	@Column(name="map")
	private String map;

	@Column(name="distanceunit")
	private String distanceunit;
	
	@Column(name="speedunit")
	private String speedunit;
	
	@Column(name="latitude")
	private Double latitude;
	
	@Column(name="longitude")
	private Double longitude;
	
	@Column(name="zoom")
	private Integer zoom;
	
	@Column(name="twelvehourformat")
	private boolean twelvehourformat;
	
	@Column(name="attributes")
	private String attributes;
	
	@Column(name="coordinateformat")
	private String coordinateformat;
	
	@OneToMany(mappedBy="user",targetEntity=Notification.class,fetch=FetchType.EAGER)
	List<Notification> notifications;
	
	@ManyToMany
	  @JoinTable(
	      name="user_device",
	      joinColumns= 
	      	@JoinColumn (name="userid", referencedColumnName="id"),
	      inverseJoinColumns= 
	      	@JoinColumn(name="deviceid", referencedColumnName="id"))
	  private List<Device> devices;
	
	
	@ManyToMany
	  @JoinTable(
	      name="user_geofence",
	      joinColumns= 
	      	@JoinColumn (name="userid", referencedColumnName="Id"),
	      inverseJoinColumns= 
	      	@JoinColumn(name="geofenceid", referencedColumnName="Id"))
	  private List<Geofence> geofences;
	
/*	@ManyToMany
	  @JoinTable(
	      name="user_group",
	      joinColumns= 
	      	@JoinColumn (name="userid", referencedColumnName="id"),
	      inverseJoinColumns= 
	      	@JoinColumn(name="groupid", referencedColumnName="id"))
	  private List<Group> groups;
	*/
	
	public Integer getId() {
		return id;
	}

	public List<Notification> getNotifications() {
		return notifications;
	}

	public void setNotifications(List<Notification> notifications) {
		this.notifications = notifications;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getHashedpassword() {
		return hashedpassword;
	}

	public void setHashedpassword(String hashedpassword) {
		this.hashedpassword = hashedpassword;
	}

	public String getSalt() {
		return salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	public boolean isReadonly() {
		return readonly;
	}

	public void setReadonly(boolean readonly) {
		this.readonly = readonly;
	}

	public boolean isAdmin() {
		return admin;
	}

	public void setAdmin(boolean admin) {
		this.admin = admin;
	}

	public String getMap() {
		return map;
	}

	public void setMap(String map) {
		this.map = map;
	}

	public String getDistanceunit() {
		return distanceunit;
	}

	public void setDistanceunit(String distanceunit) {
		this.distanceunit = distanceunit;
	}

	public String getSpeedunit() {
		return speedunit;
	}

	public void setSpeedunit(String speedunit) {
		this.speedunit = speedunit;
	}

	public Double getLatitude() {
		return latitude;
	}

	public void setLatitude(Double latitude) {
		this.latitude = latitude;
	}

	public Double getLongitude() {
		return longitude;
	}

	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}

	public Integer getZoom() {
		return zoom;
	}

	public void setZoom(Integer zoom) {
		this.zoom = zoom;
	}

	public boolean isTwelvehourformat() {
		return twelvehourformat;
	}

	public void setTwelvehourformat(boolean twelvehourformat) {
		this.twelvehourformat = twelvehourformat;
	}

	public String getAttributes() {
		return attributes;
	}

	public void setAttributes(String attributes) {
		this.attributes = attributes;
	}

	public String getCoordinateformat() {
		return coordinateformat;
	}

	public void setCoordinateformat(String coordinateformat) {
		this.coordinateformat = coordinateformat;
	}

	public List<Device> getDevices() {
		return devices;
	}

	public void setDevices(List<Device> devices) {
		this.devices = devices;
	}

	public List<Geofence> getGeofences() {
		return geofences;
	}

	public void setGeofences(List<Geofence> geofences) {
		this.geofences = geofences;
	}

	/*public List<Group> getGroups() {
		return groups;
	}

	public void setGroups(List<Group> groups) {
		this.groups = groups;
	}
	*/
	
}
