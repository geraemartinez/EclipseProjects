package ctc.traccar.data.entities;

import java.io.Serializable;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonManagedReference;

import java.math.BigInteger;


/**
 * COLUMNS AND MAPS READY
 * 
 */
@Entity
@Table(name="application_settings")
public class ApplicationSetting implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="id")
	private BigInteger id;
	
	@Column(name="allowCommandsOnlyForAdmins")
	private byte allowCommandsOnlyForAdmins;
	
	@Column(name="bingMapsKey")
	private String bingMapsKey;
	
	@Column(name="defaultPasswordHash")
	private String defaultPasswordHash;
	
	@Column(name="disallowDeviceManagementByUsers")
	private byte disallowDeviceManagementByUsers;
	
	@Column(name="eventRecordingEnabled")
	private byte eventRecordingEnabled;
	
	@Column(name="language")
	private String language;
	
	@Column(name="matchServiceURL")
	private String matchServiceURL;
	
	@Column(name="notificationExpirationPeriod")
	private int notificationExpirationPeriod;
	
	@Column(name="registrationEnabled")
	private byte registrationEnabled;
	
	@Column(name="salt")
	private String salt;
	
	@Column(name="updateInterval")
	private short updateInterval;
	
	@Column(name="userSettings_id")
	private BigInteger userSettings_id;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="userSettings_id",insertable=false, updatable = false)
	@JsonManagedReference
	private UserSetting userSetting;

	public ApplicationSetting() {
	}

	public BigInteger getId() {
		return this.id;
	}

	public void setId(BigInteger id) {
		this.id = id;
	}

	public byte getAllowCommandsOnlyForAdmins() {
		return this.allowCommandsOnlyForAdmins;
	}

	public void setAllowCommandsOnlyForAdmins(byte allowCommandsOnlyForAdmins) {
		this.allowCommandsOnlyForAdmins = allowCommandsOnlyForAdmins;
	}

	public String getBingMapsKey() {
		return this.bingMapsKey;
	}

	public void setBingMapsKey(String bingMapsKey) {
		this.bingMapsKey = bingMapsKey;
	}

	public String getDefaultPasswordHash() {
		return this.defaultPasswordHash;
	}

	public void setDefaultPasswordHash(String defaultPasswordHash) {
		this.defaultPasswordHash = defaultPasswordHash;
	}

	public byte getDisallowDeviceManagementByUsers() {
		return this.disallowDeviceManagementByUsers;
	}

	public void setDisallowDeviceManagementByUsers(byte disallowDeviceManagementByUsers) {
		this.disallowDeviceManagementByUsers = disallowDeviceManagementByUsers;
	}

	public byte getEventRecordingEnabled() {
		return this.eventRecordingEnabled;
	}

	public void setEventRecordingEnabled(byte eventRecordingEnabled) {
		this.eventRecordingEnabled = eventRecordingEnabled;
	}

	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public String getMatchServiceURL() {
		return this.matchServiceURL;
	}

	public void setMatchServiceURL(String matchServiceURL) {
		this.matchServiceURL = matchServiceURL;
	}

	public int getNotificationExpirationPeriod() {
		return this.notificationExpirationPeriod;
	}

	public void setNotificationExpirationPeriod(int notificationExpirationPeriod) {
		this.notificationExpirationPeriod = notificationExpirationPeriod;
	}

	public byte getRegistrationEnabled() {
		return this.registrationEnabled;
	}

	public void setRegistrationEnabled(byte registrationEnabled) {
		this.registrationEnabled = registrationEnabled;
	}

	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	public short getUpdateInterval() {
		return this.updateInterval;
	}

	public void setUpdateInterval(short updateInterval) {
		this.updateInterval = updateInterval;
	}

	public BigInteger getUserSettings_id() {
		return this.userSettings_id;
	}

	public void setUserSettings_id(BigInteger userSettings_id) {
		this.userSettings_id = userSettings_id;
	}

}