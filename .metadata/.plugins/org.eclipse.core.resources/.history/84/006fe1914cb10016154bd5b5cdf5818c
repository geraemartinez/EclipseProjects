package ctc.traccar.web.controllers;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;

import ctc.traccar.business.interfaces.UserServiceInt;
import ctc.traccar.business.interfaces.UsersNotificationServiceInt;
import ctc.traccar.models.vo.UserVo;
import ctc.traccar.models.vo.UsersNotificationVo;

@Controller
public class HomeController {
	
	//This enable log4j to get logs for this controller
	@SuppressWarnings("unused")
	private static Logger logger = Logger.getLogger(HomeController.class);
	
	@Autowired
	private UserServiceInt userService;
	
	@Autowired
	private UsersNotificationServiceInt notService;

	
	@ModelAttribute("UserVo")
    public UserVo getUserVo(){
        return new UserVo();
    }

	
	@RequestMapping("/index")
    public ModelAndView home(){
        ModelAndView mv = new ModelAndView("home");
        return mv;
    }

	@RequestMapping("/User/GetAll")
	@ResponseBody
	public String UserAll() {
		List<UserVo> result =  userService.getAll();
		

	    try {
	    	final OutputStream out = new ByteArrayOutputStream();
		    final ObjectMapper mapper = new ObjectMapper();
			mapper.writeValue(out, result);
			final byte[] data = ((ByteArrayOutputStream) out).toByteArray();
		    System.out.println(new String(data));
			return new Gson().toJson(result);
		} catch (JsonGenerationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JsonMappingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    return null;
	  
	} 
	@RequestMapping("/Not/GetAll")
	@ResponseBody
	public String NotificationsAll() {
		List<UsersNotificationVo> result =  notService.getAll();
		return new Gson().toJson(result);
	} 
	
}
