package ctc.traccar.business.implementations;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ctc.traccar.api.vos.DeviceVo;
import ctc.traccar.api.vos.GeofenceVo;
import ctc.traccar.api.vos.PictureVo;
import ctc.traccar.api.vos.ReportVo;
import ctc.traccar.business.helpers.DeviceHelper;
import ctc.traccar.business.helpers.PictureHelper;
import ctc.traccar.business.helpers.ReportHelper;
import ctc.traccar.business.interfaces.ReportServiceInt;
import ctc.traccar.data.entities.Picture;
import ctc.traccar.data.entities.Report;
import ctc.traccar.data.interfaces.ReportRepositoryInt;

@Service
public class ReportService implements ReportServiceInt {

	private static Logger logger = Logger.getLogger(ReportService.class);

	@Autowired ReportRepositoryInt repo;
	
	@Override
	public List<ReportVo> getAllReports() {
		try {
			List<ReportVo> result = new ArrayList<ReportVo>();
			List<Report> reports =  repo.getAllReports();
			
			if (reports!=null && !reports.isEmpty()){
				
				result =  ReportHelper.converToVos(reports);
				return result;
				
			}
						
		}catch(Exception e){ 
			logger.error("[ERROR] Uncaught Exception - the following error ocurred at ReportService getAllReports() method : " + e.getMessage());
		}
		return null;
	}

	@Override
	public ReportVo getReportById(ReportVo report) {
	 try {
			
		 	ReportVo result = new ReportVo();
			
			if(report!=null && report.getId()!=null){
				
				Report ToSearch = ReportHelper.converToObj(report);
				result =  ReportHelper.converToVO(repo.getReportById(ToSearch));
				return result;
				
			}
			
		}catch(Exception e){ 
			logger.error("[ERROR] Uncaught Exception - the following error ocurred at ReportService getReportById() method : " + e.getMessage());
		}
		return null;
	}

	@Override
	public List<DeviceVo> getDevicesByReport(ReportVo report) {
		try {
			
			List<DeviceVo> result = new ArrayList<DeviceVo>();
			
			if(report!=null && report.getId()!=null){
				
				Report ToSearch = ReportHelper.converToObj(report);
				result =  DeviceHelper.converToVo(repo.getDevicesByReport(ToSearch));
				return result;
				
			}
			
		}catch(Exception e){ 
			logger.error("[ERROR] Uncaught Exception - the following error ocurred at ReportService getDevicesByReport() method : " + e.getMessage());
		}
		return null;
	}

	@Override
	public List<GeofenceVo> getGeofenceByReport(ReportVo report) {
	  try {
			
			List<GeofenceVo> result = new ArrayList<GeofenceVo>();
			
			if(report!=null && report.getId()!=null){
				
				Report ToSearch = ReportHelper.converToObj(report);
				result =  GeofenceHelper.converToVo(repo.getDevicesByReport(ToSearch));
				return result;
				
			}
			
		}catch(Exception e){ 
			logger.error("[ERROR] Uncaught Exception - the following error ocurred at ReportService getDevicesByReport() method : " + e.getMessage());
		}
		return null;
	}
}
